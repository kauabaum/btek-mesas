<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>