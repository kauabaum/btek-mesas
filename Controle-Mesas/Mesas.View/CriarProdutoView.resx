<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADvCwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAAAupSURBVHja7d15rF5FHQbgLrTWllJoKa1lUQiBoKgoAiICbTAqCEYRFLEgEKEoEFG0
        qEE0EQs07IqiQQyoUVBkFwkgCagYqewiyN4iiNKURdSyFH+TzIfHz1562957vvnOeZ7k/Yc06e1h5r1n
        nRkxAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoV5tvt0eRAeor
        gJGRSZGpkXV7lPR3T1AAUH8BjI+cFbkzcnuPkv7uI3MZ+R8DNRbAxMjVkZd6nPkKAOovgDUjVxVQACco
        AFAA/seAAgAUAKAAAAUAKABAAQAKAFAAgAIAFACgAAAFACgAQAEACgAUgAIABaAAQAEoAFAACgAUgAIA
        BaAAQAEoAFAACgAUgAIABaAAQAEoAFAACgAUgAKAvimAiQUVwIheB9p4BnBF5IXI0h7lhVwAr4qMrTFr
        dM46lARtLYAxkV0i+0f261FmR74cOa/mfD9yVuS0yLzI3MjBkT0j20c2iawXmaAQaGoBlJK5BVyGpDwX
        eTayJPKXyM2RiyKnRA6LzIpsNFApAKtWREdHlhVSAgMlXao8Gbk3ckn+mXeITFYGsHoFMLcPCmB5eSLy
        m8jXI+/NlwzKAFpSANU8Hbkpckxkq3yjURFASwqgmnT/4Hv5nsF4RQDtKoBOFkfOj+yeH7kqAmhRAXTy
        VOTSyAecEUD7CqCTZyI/jGzb/RISKIDmF0AnCyNfikx1NoAC6I/3AIbjvYJfRnZ2NoACaF8BdPJoPhuY
        ogRwCdDOpLOByyJbKwEUQHtzV+T91UsCcAnQrjweOTx/Hq0EcAbQwqQvEo+PrK0EUADtzPORcyLT3RdA
        AbQzy/KrxOsrABRAe3NxZEMlgAJob35avRyAJhWApwCDuxw4t/rCEDgDaN8LQ6dXPy0GBdCuLM2rKI9R
        AiiAdiatL3Cgx4MogPbmwchOCgAF0N7c4PEgCqDdOcN3AyiA9iYtM7avAkABtDe35L0MlQAKoKU5Je94
        rARQAC1M2qbsXR4NsjITr6TdgRXA6ictKzZJAdCPBWACD81bggcoAAZbAOl10t0ih0bm9CiHRI6NfKfm
        pL37fpx37Lk+b/v9TANK4LeRaUqAwRRA+qjkqgIG7Qnda+PXlPR3joqsFdksMjPyybwSz4K8NFc/riQ0
        RwEwmAKYWFoBFHIZlH6W9SJ75DJY2GclcKOzABTA0JRBerT2pshxkbv76F7AbAWAAhjaQkiXCSflpbtL
        L4HLIxOUAApgaIsgnRHMilxbeAEsqb4XAH1xE7Dw41XNjPwhzj8KLoFvRUYrAJwBDE8RjIsckd/CK7EA
        7o9s7iwAZwDDVwLpMeJHI4sKLIAXIwcrABTA8BfB3oXeHLygs14AuAQYvhIYmd9qfKrApcO2cBaAM4Dh
        L4GxkXn51LukNwP3VwAogHpKYGr+vqCks4Bvd9YKAJcAw18C20QeKmzFoKkKAGcA9d0POLagS4G/R3Zw
        GYACqK8ENspfFJayr+AhCgCXAPWWwBF5P78SSuBM9wFQAPUWwAaRPxRSANfl/98GPy4BaiyBYwopgPvy
        ZYnBjzOAGgvg7YW8IZi+V9hRAeAMoJ3H+N+RfdwIRAG09zLgMwoAlwD1F8CuhawbML+JxxkFUHoBpH37
        /lzAcT4nf69gAigAlwA1HucJeb3+Xh/nCyPjFQAKoN7jnF7A+VEBx/ka7wLgEqD+4zwy/xt7fZxviqyj
        AHAGUP99gKMLOM73+CoQBdCbAji0kEVCpykAqgVwZQED86S8uGaTC+CgQgpgugKgenf6skJWrBnd8AI4
        zBkApQ3M9EjoogIG5nlN/VS1sHsA9+dNT00ABfDyxhY/KWBgXtnUpasrewecXMBxvtdNQKoDc0zk7AIG
        5q2RdRtcAGMLOdNa4DEg3b+ZTi1gYC6MvLGJH6rkf9M6hSwMcrUXgei+Nv1qIZ+q7tm0Aqgc460jjxZw
        nM+PvFoBUB2chxfyqeq8Bi8KcmAhKwSf1tTHraz64Ex72v2rkDXr1mrSWUDlO4CzCynZudYDoHuA7ljI
        9taNWru+UrAbR+4u4Pg+F9lPAdA9SF8beaCQ31BfaWAB7J8nnzUBKXKQTsyn3yUUwO87r6o2ZJ/ACYU8
        /uu8A7CBAmB516hnFjJI02/KOZUJ1O8FsFtB24VflQvJwOf/BuqhhQzSlBv7+Syg67f/zwo6ridaD5CB
        BuvMyOJCBmraSutzDSiAjxSyEGjnzGq2G4AMNGBnRP5Y0G+rdL26Zb8N2Mrkn1HIGoCdpJeQ3qoAGGjQ
        pnfVf1DQgE05t/Paaj8M2srkH5NfanqxoGN5fWSSyc8rDdw5eRvpUgbt0shRnevWkgdv9aZlZN/Ik4WV
        6TzX/6xo8Kb31R8rbOCmPfU+VPJTga7Jv1Mh6/9Xk+5D7O70nxUN4gmFLA/WnYeqA7ikQdw1+beL3F7g
        8UufWr9GATCYgXxkgQO4s7V1USXQNfnfEbml0GN3sg+AGOxgfnNkUaED+eH84VLPS6Br8s+K3FnoMUsv
        Ib3bb38GO6DHFrKDzSs9zjqss71V3QO7a+KPyc/W7yv4eKVXvNdWAKzM4C7l8+CB8s+8ivAmXROyrok/
        Il9Tn1jg3f5qluVLOpOflRrkadno3xU8sDuD++bIAZ3n28NRBMuZ+OPzU4kbCnvOP9DLVJsrAFZlwH+6
        Dwb4S/lMJe1rsFdk8nIm7FBM+hF5oZLd8grKT/fBcenstjRKAbAqg/91kTv6ZKCnPBu5NvKpyKadPQYG
        ygomeydpo5KN8nJeVxT0Vd9gssirv6zub78vFvZm4GDyfL4p993IJ/Kz+amdhTBXkPRnpuQXoj4e+Ub+
        PmJpnx2DlDM6Oy0pAFa1BDbus7OA5X1V+LfIbZELI8dHjogcnJfGmp1LIv234yIX5Gf5fy1kBR+//en5
        WcDn++RewMreQHw+T/JlDfu3/c9GqwqA1S2B9fMyXS9JXyTd+d/C5GcozwIOyht3mGBlJ52pfaHfl1Oj
        vBJIb5JdaoIVnxvyQiQmP0NeAttHHjHJis3i/J6C3/4MWwnMzTfPTLjybmrO77z7AMNVAGmH24tNuOLy
        K6f+1FUCbylwxZs255G8CpHJT20l8LHCv4JrS57Nn0Zb649aC2CNvIef+wG9ve5PW32P89ufXpRA+jru
        PBOxZ0n3YtYz+ellCaQv5a42GXuydZrv/Ol5AaRsVfBimE1MugH7Ts/7KakE0l3ou03OWpZH97IPRZbA
        eyIPmKTD+rjvgyY/JZfArvlrNBN26JdD39Pkpx9KYJfCdhluwue97zP56acSSMtw/drkXe0siOxs8tOP
        JbBZ5OcNXE2orpd8Lo9safLTzyUwNS9N/ZRJvVI7+aY3/Kab/DShBMbmBTjdHFxxHsyLlI4z+WlaEbwt
        8guXBAOe8l8T2aGurc6gFyUwLS+//ZhJ/3Iez5dJM0x82lACo/Obg5e0fKHRpflG36zqBh4mP20pgkn5
        evfWFk7+2yOHVLftNvFpYwmMyFt8px17FrZg4i/KW4pv6lofRfDfjMpLjX2zofcH0r/pzLxd1ygTHwa+
        P7BNfg7+YEMe650e2bZ7t2Lglc8Itsz7EqYVb5f00aRfkn/mufnf4Dc+rMY9gnSzcGZ+VLYgL4RZ4uKc
        C/LPODP/zK7xYYjLYHpeEOO4vBTZwz1amPS5vDhH+hm+lj+DnmbSw/CXQCfjI2+I7J23w74uL5e1eIi3
        /E5vLj4RuSef2qcdePaKvD7/DMv9+YD6ymBknozpkeKOkX0iR0VOjVyQyyGdot8WuSOvV/CnvIzZXfm/
        3Zr/TJrk50dOiXw28uG8Bt/G+e8YadJD2YVQvZk4Nn9cs2ZkSj5VT6/dbphXNZ6R/9vk/GfSnx3TffPO
        hIdmlMIqBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgIP8BeC2C
        NOiuVwQAAAAASUVORK5CYII=
</value>
  </data>
</root>